<!DOCTYPE html>
<html>
<head>
	<meta charset="utf-8">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<title>Socket.io Chat</title>
	<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css">
	<link rel="stylesheet" href="/css/style.css">
</head>

<body class="chat-room">
	<div class="room-header">
		<div class="room-menu">
			<form role="form" class="form-inline" method="post" action="/chat/leave/<%= room.id %>" style="display:inline-block">
				<button type="submit" id="leave-room" class="btn btn-danger">Leave Room</button>
			</form>
			<form role="form" class="form-inline" method="post" action="/chat/invite/<%= room.id %>" style="display:inline-block">
				<button type="button" id="stop-listening" class="btn btn-warning">Stop Listening</button>
				<div class="input-group">
					<input type="text" name="username" class="form-control" placeholder="Username of Invitee">
					<span class="input-group-btn">
						<button class="btn btn-primary" type="submit">Invite</button>
					</span>
				</div>
			</form>
		</div>
		<h1 id="room-name">
			<a href="/"><span class="glyphicon glyphicon-home"></span></a>
			&nbsp;
			<%= room.local.roomName %>
		</h1>
	</div>
	<ul id="messages">

	</ul>
	<form class="container-fluid" id="send-msg">
		<div class="row">
			<div class="input-group">
				<input type="text" id="msg" class="form-control">
				<div class="input-group-btn">
					<button type="submit" class="btn btn-block btn-primary">
						<span class="glyphicon glyphicon-send"></span>&nbsp;send
					</button>
				</div>
			</div>
		</div>
	</form>
	<script src="/socket.io/socket.io.js"></script>
	<script src="http://code.jquery.com/jquery-1.11.1.js"></script>
	<script>
	var nickname = '<%= user.local.username %>';

	function msgDisplay(data){
		var m_display = $('<li>');
		m_display.append($('<b class="nickname">').text(data.nickname));

		var utcSeconds = data.time;
		var d = new Date(0);
		d.setUTCMilliseconds(utcSeconds);
		var timeString = d.getHours() + ':' + d.getMinutes();

		m_display.append($('<span class="time">').text(timeString));
		m_display.append($('<div>').append($('<p>').text(data.message)));
		if(data.nickname == nickname)
			m_display.addClass("msg self");
		else
			m_display.addClass("msg others");
		return m_display;
	}

	<% roomIndex = user.local.ridJoined.indexOf(room.id) %>
	var socket;
	var room = '<%= room.id %>';
	var roomMsgCount = <%= room.local.messages.length %>;
	var ongoingTypingTimeout = null;
	var latestRead = <%= user.local.ridJoined[roomIndex].latestRead %>;
	var listening = true;

	$.ajax({
		url: '/chat/message/' + room,
		method: 'get',
		success: function(dataJSON, textStatus, jqXHR){
			var data = JSON.parse(dataJSON);
			for(var i = 0; i < data.length; i++){
				$('#messages').append(msgDisplay(data[i]));
			}
			$("html, body").animate({ scrollTop: $(document).height() }, 400);
		}
	});

	$('#stop-listening').click(function(){
		listening = !listening;
		console.log('listening: ' + listening);
		if(listening){
			$.ajax({
				url: '/chat/message/' + room + '/start/' + latestRead,
				method: 'get',
				success: function(dataJSON, textStatus, jqXHR){
					var data = JSON.parse(dataJSON);
					for(var i = 0; i < data.length; i++){
						$('#messages').append(msgDisplay(data[i]));
					}
					$("html, body").animate({ scrollTop: $(document).height() }, 400);
				}
			});
			$(this).addClass('btn-warning');
			$(this).removeClass('btn-danger');
		} else {
			$(this).removeClass('btn-warning');
			$(this).addClass('btn-danger');
		}
	});

	socket = io();

	socket.emit('log-in', JSON.stringify({
		nickname: nickname,
		room: room
	}));

	latestRead = roomMsgCount;
	socket.emit('read', JSON.stringify({nickname: nickname, latestRead: latestRead}));

	$('#send-msg').submit(function(e){
		e.preventDefault();
		var msg = $('#msg').val();
		if (msg.trim()) {
			var msgInfo = {
				nickname: nickname,
				message: msg
			}
			socket.emit('chat-msg', JSON.stringify(msgInfo));
			$('#msg').val('');
		}
		return false;
	});

	$('#msg').keyup(function(e){
		if(e.keyCode != 13)
		socket.emit('typing', nickname);
	});

	socket.on('chat-msg', function(msg){
		if(!listening) return;
		var m = JSON.parse(msg);
		$('#messages').append(msgDisplay(m));
		$("html, body").animate({ scrollTop: $(document).height() }, 400);

		roomMsgCount++;
		latestRead = roomMsgCount;
		socket.emit('read', JSON.stringify({nickname: nickname, latestRead: latestRead}));
	});

	socket.on('log-in', function(nickname){
		if(!listening) return;
		var n_display = $('<li>').append($('<p>').text(nickname + ' logged in!'));
		n_display.addClass('msg notice');
		$('#messages').append(n_display);
		$("html, body").animate({ scrollTop: $(document).height() }, 400);
	});

	socket.on('log-out', function(nickname){
		if(!listening) return;
		var n_display = $('<li>').append($('<p>').text(nickname + ' logged out.'));
		n_display.addClass('msg notice');
		$('#messages').append(n_display);
		$("html, body").animate({ scrollTop: $(document).height() }, 400);
	});

	socket.on('typing', function(nickname){
		if(!listening) return;
		if($('#typing-' + nickname).length <= 0){
			$('#send-msg').prepend(
				$('<p class="typing" id="typing-' + nickname + '">')
				.text(nickname + ' is typing...')
			);
		} else {
			window.clearTimeout(ongoingTypingTimeout);
		}
		ongoingTypingTimeout = window.setTimeout(function(){
			$('#typing-' + nickname).remove();
		}, 500);
	});

	</script>
</body>
</html>
